# server
# 应用端口
server.port = 8099
# 上下文路径
server.servlet.context-path = /plugin-integration
# tomcat 最大连接数socket
server.tomcat.max-connections = 1000
# tomcat起动的最大线程数，即同时处理的任务个数，默认值为200
server.tomcat.max-threads = 1500
# tomcat启动时的初始化的线程数
server.tomcat.min-spare-threads = 600
# 当tomcat起动的线程数达到最大时，接受排队的请求个数，默认值为100
server.tomcat.accept-count = 1000

# datasource
spring.datasource.url=jdbc:mysql://localhost:3306/abroad?autoReconnect=true&useUnicode=true&characterEncoding=utf-8&rewriteBatchedStatements=true&allowMultiQueries=true
spring.datasource.username=localhost
spring.datasource.password=localhost
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# druid pool
# 初始连接数，默认0
spring.datasource.druid.initial-size = 10
# 最大连接池数量，默认8
spring.datasource.druid.max-active = 50
# 最小连接池数量
spring.datasource.druid.min-idle = 10
# 获取连接时最大等待时间，单位毫秒
spring.datasource.druid.max-wait = 60000
#是否启用StatFilter默认值true
spring.datasource.druid.web-stat-filter.enabled = true
spring.datasource.druid.stat-view-servlet.enabled = true
spring.datasource.druid.time-between-eviction-runs-millis = 60000
spring.datasource.druid.min-evictable-idle-time-millis = 300000
spring.datasource.druid.filters = wall,stat
spring.datasource.druid.validation-query = SELECT 'x'

#mybaties
mybatis.typeAliasesPackage = com.wangxd.example.plugin.integration.persistent.entity
mybatis.mapperLocations = classpath:mapper/*.xml
mybatis.config-location= classpath:mybatis-config.xml

####redis的配置信息###

###  单机
spring.redis.host=localhost
spring.redis.port=6379

###  哨兵
#spring.redis.sentinel.master=mymaster
#spring.redis.sentinel.nodes=host1:port1,host2:port2,...

###  集群
#spring.redis.cluster.nodes=host1:port1,host2:port2,..

# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器连接密码（默认为空）
spring.redis.password=localhost
# 连接超时时间（毫秒）
spring.redis.timeout=10000
# Lettuce
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.lettuce.pool.max-active=200
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.lettuce.pool.max-wait=10000
# 连接池中的最大空闲连接
spring.redis.lettuce.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.lettuce.pool.min-idle=0
# 关闭超时时间
spring.redis.lettuce.shutdown-timeout=1000




































